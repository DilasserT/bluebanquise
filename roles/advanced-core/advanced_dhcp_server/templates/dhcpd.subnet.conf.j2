#### Blue Banquise file ####
## {{ansible_managed}}

{% set range = 'all' %}

{% for equipment in j2_equipment_groups_list %}
##### START {{equipment}} #####
group {

{# can be merged into one using variable #}
{% if hostvars[groups[equipment][0]]['equipment_profile']['ipxe_network_driver'] == 'snponly' %}
{% set ipxe_rom = 'snponly_' %}
{% elif hostvars[groups[equipment][0]]['equipment_profile']['ipxe_network_driver'] == 'snp' %}
{% set ipxe_rom = 'snp_' %}
{% else %}
{% set ipxe_rom = '' %}
{% endif %}
 if exists client-arch {
   if option client-arch = 00:00 {
     filename "x86_64/standard_undionly.kpxe";
   } elsif option client-arch = 00:06 {
     filename "x86/standard_{{ipxe_rom}}ipxe.efi";
   } elsif option client-arch = 00:07 {
     filename "x86_64/standard_{{ipxe_rom}}ipxe.efi";
   } elsif option client-arch = 00:08 {
     filename "x86_64/standard_{{ipxe_rom}}ipxe.efi";
   } elsif option client-arch = 00:09 {
     filename "x86_64/standard_{{ipxe_rom}}ipxe.efi";
   } elsif option client-arch = 00:0a {
     filename "arm32/standard_{{ipxe_rom}}ipxe.efi";
   } elsif option client-arch = 00:0b {
     filename "arm64/standard_{{ipxe_rom}}ipxe.efi";
   }
 }

{% for host in groups[equipment] %}
{% if host in groups[range] %}
{% if hostvars[host]['network_interfaces'] is defined %}
{% for nic, nic_args in hostvars[host]['network_interfaces'].items() %}
{% if (nic_args.network == item) and (nic_args.network == hostvars[host]['j2_node_main_network']) and (nic_args.ip4 is defined and not none) %}
{% if nic_args.mac is defined and not none %}
  host {{host}} { 
    option host-name "{{host}}";
    hardware ethernet {{nic_args.mac}}; 
    fixed-address {{nic_args.ip4}};
  }
{% elif nic_args.dhcp_client_identifier is defined and not none %}
  host {{host}} {
    option host-name "{{host}}";
    option dhcp_client_identifier {{nic_args.dhcp-client-identifier}};
    fixed-address {{nic_args.ip4}};
  }
{% elif nic_args.host_identifier is defined and not none %}
  host {{host}} {
    option host-name "{{host}}";
    host_identifier {{nic_args.host-identifier}};
    fixed-address {{nic_args.ip4}};
  }
{% elif nic_args.option_match is defined and not none %}{# Warning, only works in a shared network!! #}
  class "option_match_{{host}}" {
    match if (
      {{nic_args.option_match}}
    );
  }
  pool {
    option host-name "{{host}}";
    allow members of "option_match_{{host}}";
    range {{nic_args.ip4}};
  }
{% endif %}
{% endif %}
{% endfor %}
{% if hostvars[host]['bmc'] is defined %}
{% set bmc_args = hostvars[host]['bmc'] %}
{% if (bmc_args.network is defined and not none) and (bmc_args.network == item) and (bmc_args.name is defined and not none) and (bmc_args.ip4 is defined and not none) %}
{% if bmc_args.mac is defined and not none %}
    host {{bmc_args.name}} {
      option host-name "{{bmc_args.name}}";
      hardware ethernet {{bmc_args.mac}};
      fixed-address {{bmc_args.ip4}};
    }
{% elif bmc_args.dhcp_client_identifier is defined and not none %}
  host {{bmc_args.name}} {
    option host-name "{{bmc_args.name}}";
    option dhcp_client_identifier {{bmc_args.dhcp-client-identifier}};
    fixed-address {{bmc_args.ip4}};
  }
{% elif nic_args.host_identifier is defined and not none %}
  host {{bmc_args.name}} {
    option host-name "{{bmc_args.name}}";
    host_identifier {{bmc_args.host-identifier}};
    fixed-address {{bmc_args.ip4}};
  }
{% elif nic_args.option_match is defined and not none %}{# Warning, only works in a shared network!! #}
  class "option_match_{{bmc_args.name}}" {
    match if (
      {{bmc_args.option_match}}
    );
  }
  pool {
    option host-name "{{bmc_args.name}}";
    allow members of "option_match_{{bmc_args.name}}";
    range {{bmc_args.ip4}};
  }
{% endif %}
{% endif %}
{% endif %}
{% endif %}
{% endif %}
{% endfor %}

}
##### End {{equipment}} #####


{% endfor %}
