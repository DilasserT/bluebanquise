---

- name: include_vars ░ Gather OS specific variables
  # This task gathers variables defined in OS specific files.
  #
  # Search vars in:
  #  - <distribution>_<major>.yml    # eg. CentOS_8.yml
  #  - <os_family>_<major>.yml       # eg. RedHat_8.yml
  #  - <distribution>.yml            # eg. CentOS.yml
  #  - <os_family>.yml               # eg. RedHat.yml
  #
  # If no OS specific file is found, the role will default to vars/main.yml
  #
  include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "vars/{{ ansible_facts.distribution | replace(' ','_') }}_{{ ansible_facts.distribution_major_version }}.yml"
        - "vars/{{ ansible_facts.os_family }}_{{ ansible_facts.distribution_major_version }}.yml"
        - "vars/{{ ansible_facts.distribution | replace(' ','_') }}.yml"
        - "vars/{{ ansible_facts.os_family }}.yml"
      skip: true

- name: "package █ Install {{ routes_packages_to_install | join(' ') }}"
  package:
    name: "{{ routes_packages_to_install }}"
    state: present

- name: "service █ Manage {{ routes_services_to_start | join(' ') }} state"
  service:
    name: "{{ item }}"
    enabled: "{{ (enable_services | bool) | ternary('yes','no') }}"
    state: started
  loop: "{{ routes_services_to_start }}"
  tags:
    - service

# Check route 0.0.0.0/0 is only set once
- name: assert ░ Assert there are only one default route
  assert:
    that:
      - (network_interfaces | selectattr('routes4','defined') | map(attribute='routes4') | select('match', '.*0.0.0.0/0.*') | list | length) <= 1

- name: command █ Set routes via nmcli
  command: "nmcli connection modify {{ item.interface }} +ipv4.routes '{{ item.routes4 | default(networks[item.network]['routes4'] | default([])) | join(',') }}'"
  loop: "{{ network_interfaces }}"
  when: (item.routes4 is defined and item.routes4) or (networks[item.network]['routes4'] is defined and networks[item.network]['routes4'])

